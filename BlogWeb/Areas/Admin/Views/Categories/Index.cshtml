
@using BlogWeb.Models
@using PagedList.Core.Mvc;
@model PagedList.Core.IPagedList<BlogWeb.Models.Category>
@{
    ViewData["Title"] = "Category Management";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="slim-pageheader">
    <ol class="breadcrumb slim-breadcrumb">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Categories" asp-action="Index">Category Management</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Categories" asp-action="Create">Create New Category</a></li>
    </ol>
    <h6 class="slim-pagetitle">Category Management</h6>

</div>
<h1>
    <a asp-action="Create">Create New</a>
</h1>
<div class="section-wrapper">
    <div class="table-responsive">
        <table class="table mg-b-0">
            <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        Parent Category
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @if(Model != null && Model.Count() > 0)
                 {
                    foreach(var item in Model)
                        {
                            int level = 0;
                            await RenderCategory(item, level);
                        }
                }
                else
                {
                   <tr>
                       <td><i> no records!</i></td>
                   </tr> 
                }
            </tbody>
        </table>
        @{
            async Task RenderCategory(Category item, int level)
            {   
                string prefix = String.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", level));
                <tr>
                    <td>
                        @Html.Raw(prefix)  @Html.DisplayFor(modelItem => item.CatName)
                    </td>               
                    <td>
                        @Html.DisplayFor(modelItem => item.ParentCategory.CatName)
                    </td>
                    <td>
                         <a asp-action="Edit" asp-route-id="@item.CatId" class="btn btn-success">Edit</a>
                         <a asp-action="Details" asp-route-id="@item.CatId" class="btn btn-primary">Details</a>
                         <a asp-action="Delete" asp-route-id="@item.CatId" class="btn btn-danger">Delete</a>
                    </td>                  
              </tr>
               if (item.CategoryChildren?.Count > 0)
                    {
                       foreach (var cCategory in item.CategoryChildren)
                    {
                       await RenderCategory(cCategory, level + 1);
                    }
                }
            }
        }
        <div aria-label="Page navigation example">
            <ul class="pagination"> 
                <pager class="pager-container" list="@Model" options="@PagedListRenderOptions.Bootstrap4PageNumbersOnly" asp-action="Index" asp-controller="Categories" asp-area="Admin" />
            </ul>
        </div>
    </div>
</div>